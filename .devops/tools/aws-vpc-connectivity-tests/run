#!/usr/bin/env bash
[[ "${DOCLI_DEBUG:-off}" == "on" ]]       && set -exo pipefail || set -eo pipefail
[[ "${DOCLI_UNSET_VARS:-off}" == "on" ]]  && set -u

source $DOCLI_PROJECT_ROOT/.docli_envs
source $DOCLI_DIR/functions/bash_basic_functions

hops=1

# Function to print messages with hostname in regular, bold font and the message in colored, bold font
print_message() {
  local hostname="$1"
  local port="$2"
  local success="$3" # Boolean value: 1 for success, 0 for failure
  local sent="$4"
  local received="$5"

  # Determine protocol type based on port
  local protocol_type=""
  if [ "$port" == "53" ]; then
    protocol_type="DNS"
  elif [ "$port" == "8600" ]; then
    protocol_type="Consul DNS"
  else
    protocol_type="Unknown Protocol"
  fi

  # Bold but not colored for hostname and protocol type
  echo -ne "\033[1m$hostname ($protocol_type):\033[0m "

  # Apply color for the status message
  if [ "$success" -eq 1 ]; then
    echo -e "\033[1;32mconnection was successful!\033[0m - Sent: $sent | Received: $received" # Bold Green
  else
    echo -e "\033[1;31mconnection failed!\033[0m - Sent: $sent | Received: $received" # Bold Red
  fi
}

##################
#### SPECIFIC ####
##################

# Display Title
DOCLI_SCRIPT_TITLE="docli => VPC Connectivity Tests" && echo -e '\033k'$DOCLI_SCRIPT_TITLE'\033\\'
printf '\033[2J' # clear screen to show banner
if [[ "${DOCLI_PARAM_MODE:-}" == "funny" ]]; then
  echo -e "VPC Connectivity Tests - Number of hops: $hops" | boxes -d shell -p a5v0
else
  toilet -w 120 -f future "VPC Connectivity Tests - Number of hops: $hops" | lolcat -f | boxes -d unicornthink -p a2v1
fi

# Iterate through the array
for item in "${DOCLI_CHECK_BL_VPCS[@]}"; do
  IFS=',' read -r hostname port <<<"${item/:/,}"

  # Run synping and capture the output
  output=$(synping "$hostname" -n "$hops" -p "$port" 2>&1)

  # Extract the Sent and Received packet counts using awk
  sent=$(echo "$output" | awk '/Sent:/ {print $2}')
  received=$(echo "$output" | awk '/Received:/ {print $2}')

  # Ensure sent and received are integers
  if ! [[ "$sent" =~ ^[0-9]+$ ]] || ! [[ "$received" =~ ^[0-9]+$ ]]; then
    print_message "$hostname" "$port" 0 "$sent" "$received"
    continue # Skip to next item
  fi

  # Check if Sent equals Received
  if [ "$sent" -eq "$received" ] && [ "$received" -ne 0 ]; then
    print_message "$hostname" "$port" 1 "$sent" "$received"
  else
    print_message "$hostname" "$port" 0 "$sent" "$received"
  fi
done

echo
