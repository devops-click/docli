#!/usr/bin/env bash
# [[ "${DOCLI_DEBUG:-off}" == "on" ]]       && set -exo pipefail || set -eo pipefail
# [[ "${DOCLI_UNSET_VARS:-off}" == "on" ]]  && set -u
############################################################################### #dltbr
#              https://DevOps.click - DevOps taken seriously                  # #dltbr
###############################################################################

## DOCLI MODULE INFORMATION
DOCLI_MODULE_VERSION="0.0.01"
[[ "${BASH_SOURCE[0]}" != "" ]] && DOCLI_MODULE="$(basename "${BASH_SOURCE[0]}")"                                             || DOCLI_MODULE="$(basename "$0")"
[[ "${BASH_SOURCE[0]}" != "" ]] && DOCLI_MODULE_TYPE="$(basename "$(dirname "$(realpath "${BASH_SOURCE[0]}")")")"             || DOCLI_MODULE_TYPE="$(basename "$(dirname "$(realpath "$0")")")"
[[ "${BASH_SOURCE[0]}" != "" ]] && DOCLI_MODULE_UPPER=$(echo "$(basename "${BASH_SOURCE[0]}")"  | tr '[:lower:]' '[:upper:]') || DOCLI_MODULE_UPPER=$(echo "$(basename "$0")" | tr '[:lower:]' '[:upper:]')
##[[ "${DOCLI_MODULE_ARRAY_SOURCE:-on}" == "on" ]] && source ${DOCLI_DIR:-$DOCLI}/functions/docli_module_array

## VERBOSE INFORMATION
[[ "${DOCLI_VERBOSE:-off}" == "on" ]] && echo -e "\n***** $DOCLI_MODULE version $DOCLI_MODULE_VERSION ($DOCLI_MODULE_TYPE) *****\n"

### AZURE EXCLUSIVE
azure_check_if_running_on_tenant() {
  echo -e "\n** Checking Azure if using Tenant Account... **"
  filtered=$(az account show -o json | jq '.name | contains("N/A") or contains("tenant")')
  if [[ "$filtered" == "true" ]]; then
    echo "* DOCLI Azure Checks: Using Tenant Level Account"
    export DOCLI_AZURE_TENANT_ACCOUNT=true
  else
    echo "* DOCLI Azure Checks: Using non-Tenant Level Account"
    export DOCLI_AZURE_TENANT_ACCOUNT=false
  fi
}

azure_check_connection() {
  echo -e "\n** Checking Azure CLI Connectivity... **"
  az_con_check=$(az account show -o json 2>&1)
  exit_status=$?

  if [ $exit_status -ne 0 ]; then
    echo "* DOCLI Azure Checks: Azure CLI not logged in or other error. Attempting to log in..."
    if echo $az_con_check | grep -q "Please run 'az login' to setup account."; then
      echo "* DOCLI Azure Checks: Error: $az_con_check"
    else
      # else if we want to exit on different errors...
      echo "* DOCLI Azure Checks: Error: $az_con_check"
      # exit $exit_status
    fi
    export DOCLI_AZURE_REQUIRE_LOGIN=true
    echo "** Error! Please login! **"
    echo "* Usage without subscription: az login --allow-no-subscriptions"
    echo "* Usage with subscription:    az login"
    echo "* Or, use .docli_pre_hook receiving DOCLI_AZURE_REQUIRE_LOGIN=true/false env variable for that ;)"
  else
    echo "* DOCLI Azure Checks: Successfully retrieved Azure account details."
    export DOCLI_AZURE_REQUIRE_LOGIN=false
  fi
}