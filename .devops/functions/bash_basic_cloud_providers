#!/usr/bin/env bash
# set -euo pipefail
############################################################################### #dltbr
#              https://DevOps.click - DevOps taken seriously                  # #dltbr
###############################################################################
# PS: This script is intended to be used as source for others.
# Basic Bash Cloud Provider Check for CI/CD pipelines
###############################################################################
# echo "++++++++++++++++++++++++++++++++++"
# echo "++ Entered bash_basic_cloud_providers ++"
# echo "++++++++++++++++++++++++++++++++++"
# eval $DOCLI_DEBUG && echo "++++++++++++++++++++++++++++++++++"
# eval $DOCLI_DEBUG && echo "++ Entered bash_basic_cloud_providers ++"
# eval $DOCLI_DEBUG && echo "++++++++++++++++++++++++++++++++++"

## DOCLI MODULE INFORMATION
DOCLI_MODULE=bash_basic_cloud_providers
DOCLI_MODULE_TYPE=functions
DOCLI_MODULE_VERSION=0.3
DOCLI_MODULE_UPPER=$(echo "$DOCLI_MODULE" | tr '[:lower:]' '[:upper:]')

# Prevents script from being called directly
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  echo "* $DOCLI_MODULE: This module cannot be called directly! Exiting... *"
  exit 1
fi

echo -e "\n***** $DOCLI_MODULE version $DOCLI_MODULE_VERSION ($DOCLI_MODULE_TYPE) *****\n"

# Usage: check_providers $DOCLI_PARAM_CLOUD

function check_providers {
  # Load Basic Functions such as contains
  source "$DOCLI_DIR/functions/bash_basic_functions"

  # List of valid parameters
  VALID_PROVIDERS=(
    aws
    azure
    bitbucket
    elastic
    gcp
    vault
  )

  # Validate the provided cloud provider
  if ! contains "$1" "${VALID_PROVIDERS[@]}"; then
    echo "Error: Invalid cloud provider."
    # help
    exit 1
  fi
  echo "** Valid provider supplied. Proceeding..."
}