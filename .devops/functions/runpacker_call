#!/usr/bin/env bash
set -euo pipefail
############################################################################### #dltbr
#              https://DevOps.click - DevOps taken seriously                  # #dltbr
###############################################################################
# PS: This script is intended to be used as source for others.
# runpacker call script, to be sourced directly from packer/deploy/recipe folders
# by ./runpacker script, with or without parameters.
###############################################################################
# If variable DOCLI_PROJECT_CLIENT is set, the last option will be set by default
# -----------------------------------------------------------------------------
# -f|--force   <-   runs packer without asking (can be set anywhere in the arg position)
# -----------------------------------------------------------------------------
# Examples:
# runpacker
# runpacker --force (runs packer without asking)
# runpacker build
###############################################################################
# echo "++++++++++++++++++++++++++++++++++"
# echo "++ Entered runpacker_call ++"
# echo "++++++++++++++++++++++++++++++++++"
# eval $DOCLI_DEBUG && echo "++++++++++++++++++++++++++++++++++"
# eval $DOCLI_DEBUG && echo "++ Entered runpacker_call ++"
# eval $DOCLI_DEBUG && echo "++++++++++++++++++++++++++++++++++"

## DOCLI MODULE INFORMATION
DOCLI_MODULE=runpacker_call
DOCLI_MODULE_TYPE=functions
DOCLI_MODULE_VERSION=0.1
DOCLI_MODULE_UPPER=$(echo "$DOCLI_MODULE" | tr '[:lower:]' '[:upper:]')

echo -e "\n***** $DOCLI_MODULE version $DOCLI_MODULE_VERSION ($DOCLI_MODULE_TYPE) *****\n"

PATH="$DOCLI/bin:/opt/homebrew/bin:$PATH"

source $DOCLI/functions/bash_aws_copy_credentials

DOCLI_PARAM_FORCE=0
args=()

# Check if any arguments are passed
if [ $# -eq 0 ]; then
  default_packer_command=build
else
  # Process arguments to check for --force and remove it
  for arg in "$@"; do
    if [ "$arg" = "-f" || "$arg" = "--force" ]; then
      DOCLI_PARAM_FORCE=1
      default_packer_command=build_force
    else
      args+=("$arg")  # Add argument to new array if it's not --force
    fi
  done
fi

# Check if arguments are empty (excludes --force)
if [ ${#args[@]} -eq 0 ]; then
  source runpacker "$default_packer_command"
fi

# Check if force flag is set and modify 'build' to 'build_force'
if [ ${#args[@]} != 0 ] && [ $DOCLI_PARAM_FORCE -eq 1 ]; then
  echo "** arguments passed: running PACKER with --force flag!"
  for i in "${!args[@]}"; do
    echo "argument_count=$i"
    if [ "${args[$i]}" = "build" ]; then
      args[$i]="build_force"
      echo "argument=${args[$i]}"
    elif [ "${args[$i]}" = "destroy" ]; then
      args[$i]="destroy_force"
      echo "argument=${args[$i]}"
    else
      echo "argument=${args[$i]}"
    fi
  done
  # Now run the command with modified arguments
  source runpacker "${args[@]}"

elif [ ${#args[@]} != 0 ] && [ $DOCLI_PARAM_FORCE -eq 0 ]; then
  echo "** arguments passed: running normal PACKER..."
  source runpacker "${args[@]}"
fi
