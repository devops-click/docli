#!/usr/bin/env bash
# set -euo pipefail
############################################################################### #dltbr
#              https://DevOps.click - DevOps taken seriously                  # #dltbr
###############################################################################
# PS: This script is intended to be used as source for others.
# Basic Bash AWS Profile Check for CI/CD pipelines
###############################################################################
# echo "++++++++++++++++++++++++++++++++++"
# echo "++ Entered bash_basic_aws_profiles ++"
# echo "++++++++++++++++++++++++++++++++++"
# eval $DOCLI_DEBUG && echo "++++++++++++++++++++++++++++++++++"
# eval $DOCLI_DEBUG && echo "++ Entered bash_basic_aws_profiles ++"
# eval $DOCLI_DEBUG && echo "++++++++++++++++++++++++++++++++++"

## DOCLI MODULE INFORMATION
DOCLI_MODULE=bash_aws_profiles
DOCLI_MODULE_TYPE=functions
DOCLI_MODULE_VERSION=0.3
DOCLI_MODULE_UPPER=$(echo "$DOCLI_MODULE" | tr '[:lower:]' '[:upper:]')

# Prevents script from being called directly
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  echo "* $DOCLI_MODULE: This module cannot be called directly! Exiting... *"
  exit 1
fi

echo -e "\n***** $DOCLI_MODULE version $DOCLI_MODULE_VERSION ($DOCLI_MODULE_TYPE) *****\n"

# Check for AWS Profile (~/.aws/config)
# [[ $DOCLI_PARAM_CLOUD == "aws" ]] && check_aws_profiles $DOCLI_PARAM_BACKEND_PROFILE

check_aws_profiles() {
    # Load Basic Functions such as contains
    source "$DOCLI_DIR/functions/bash_basic_functions"

    PROFILES=$(sed -n 's/^\[profile \([^]]*\)]/\1/p' ~/.aws/config) # Read AWS config file and filter profile names
    local local_aws_profile=$1

    # Convert profile names to an array
    profile_list=()
    while read -r line; do
        profile_list+=("$line")
    done <<< "$PROFILES"


    if contains "$local_aws_profile" "${profile_list[@]}"; then
        echo "** Profile $local_aws_profile found. Proceeding..."
    else
        echo -e "${TEXT_RED}ERROR: AWS Profile $local_aws_profile not found on ~/.aws/config${END}"
        exit 1
    fi
}