#!/usr/bin/env bash
## !! SHOULD NOT HAVE ANY SET FOR SHELL HERE !! #
############################################################################### #dltbr
#              https://DevOps.click - DevOps taken seriously                  # #dltbr
###############################################################################

## DOCLI MODULE INFORMATION
DOCLI_MODULE_VERSION="0.0.01"
[[ "${BASH_SOURCE[0]}" != "" ]] && DOCLI_MODULE="$(basename "${BASH_SOURCE[0]}")"                                             || DOCLI_MODULE="$(basename "$0")"
[[ "${BASH_SOURCE[0]}" != "" ]] && DOCLI_MODULE_TYPE="$(basename "$(dirname "$(realpath "${BASH_SOURCE[0]}")")")"             || DOCLI_MODULE_TYPE="$(basename "$(dirname "$(realpath "$0")")")"
[[ "${BASH_SOURCE[0]}" != "" ]] && DOCLI_MODULE_UPPER=$(echo "$(basename "${BASH_SOURCE[0]}")"  | tr '[:lower:]' '[:upper:]') || DOCLI_MODULE_UPPER=$(echo "$(basename "$0")" | tr '[:lower:]' '[:upper:]')
##[[ "${DOCLI_MODULE_ARRAY_SOURCE:-on}" == "on" ]] && source ${DOCLI_DIR:-$DOCLI}/functions/docli_module_array

## VERBOSE INFORMATION
[[ "${DOCLI_VERBOSE:-off}" == "on" ]] && echo -e "\n***** $DOCLI_MODULE version $DOCLI_MODULE_VERSION ($DOCLI_MODULE_TYPE) *****\n"

# Prevents script from being called directly
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  echo "* $DOCLI_MODULE: This module cannot be called directly! Exiting... *"
  exit 1
fi

tf_get_base_files () {
  if [[ $current_key == "_template-gen" ]]; then
    cp $DOCLI_PROJECT_ROOT/terraform/files/locals-custom-templates.tf ./locals-custom.tf && echo "** locals-custom.tf updated! **" || echo "ERROR: could not update locals-custom.tf file!"
    cp $DOCLI_PROJECT_ROOT/terraform/files/variables-custom.tf ./variables-custom.tf && echo "** variables-custom.tf updated! **" || echo "ERROR: could not update variables-custom.tf file!"
  elif [[ $DOCLI_PARAM_SSO == true ]]; then
    cp $DOCLI_PROJECT_ROOT/terraform/files/backend-s3-custom.tf ./backend-custom.tf && echo "** backend-custom.tf updated! **" || echo "ERROR: could not update backend-custom.tf file!"
    cp $DOCLI_PROJECT_ROOT/terraform/files/data-custom.tf ./data-custom.tf && echo "** data-custom.tf updated! **" || echo "ERROR: could not update data-custom.tf file!"
    cp $DOCLI_PROJECT_ROOT/terraform/files/variables-custom.tf ./variables-custom.tf && echo "** variables-custom.tf updated! **" || echo "ERROR: could not update variables-custom.tf file!"
    cp $DOCLI_PROJECT_ROOT/terraform/files/locals-custom.tf ./locals-custom.tf && echo "** locals-custom.tf updated! **" || echo "ERROR: could not update locals-custom.tf file!"
    cp $DOCLI_PROJECT_ROOT/terraform/files/provider-aws-custom-sso.tf ./provider-custom.tf && echo "** provider-custom.tf updated! **" || echo "ERROR: could not update provider-custom.tf file!"
  else
    cp $DOCLI_PROJECT_ROOT/terraform/files/backend-s3-custom.tf ./backend-custom.tf && echo "** backend-custom.tf updated! **" || echo "ERROR: could not update backend-custom.tf file!"
    cp $DOCLI_PROJECT_ROOT/terraform/files/data-custom.tf ./data-custom.tf && echo "** data-custom.tf updated! **" || echo "ERROR: could not update data-custom.tf file!"
    cp $DOCLI_PROJECT_ROOT/terraform/files/variables-custom.tf ./variables-custom.tf && echo "** variables-custom.tf updated! **" || echo "ERROR: could not update variables-custom.tf file!"
    cp $DOCLI_PROJECT_ROOT/terraform/files/locals-custom.tf ./locals-custom.tf && echo "** locals-custom.tf updated! **" || echo "ERROR: could not update locals-custom.tf file!"
    cp $DOCLI_PROJECT_ROOT/terraform/files/provider-aws-custom.tf ./provider-custom.tf && echo "** provider-custom.tf updated! **" || echo "ERROR: could not update provider-custom.tf file!"
  fi
}